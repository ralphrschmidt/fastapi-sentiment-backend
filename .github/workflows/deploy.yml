name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    # outputs:
    #   image: ${{ steps.build-image.outputs.image }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker Authentication for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Print Image URI for Debugging
        run: |
          echo "Built and pushed Docker image: ${IMAGE_URI:0:10}...${IMAGE_URI: -10}"
        env:
          IMAGE_URI: "${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REPO }}/fastapi-backend:latest"

      - name: Build and Push Docker Image
        id: build-image
        run: |
          IMAGE_URI="${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REPO }}/fastapi-backend:latest"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "image=$IMAGE_URI" >> $GITHUB_OUTPUT  # Pass image URI to next job

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build  # Ensure deploy runs only after build succeeds

  #   steps:
  #     - name: Authenticate with Google Cloud
  #       uses: google-github-actions/auth@v1
  #       with:
  #         credentials_json: ${{ secrets.GCP_SA_KEY }}

  #     - name: Set up Google Cloud SDK
  #       uses: google-github-actions/setup-gcloud@v1
  #       with:
  #         project_id: ${{ secrets.GCP_PROJECT_ID }}

  #     - name: Deploy to Cloud Run
  #       run: |
  #         gcloud run deploy fastapi-backend-small \
  #           --image ${{ needs.build.outputs.image }} \
  #           --platform managed \
  #           --region ${{ secrets.GCP_REGION }} \
  #           --allow-unauthenticated
  #           --memory 2Gi
  #           --set-env-vars ENV=production
